"use client";
import { useState, useEffect } from "react";
import { CopilotKit } from "@copilotkit/react-core";
import { CopilotPopup } from "@copilotkit/react-ui";
import "@copilotkit/react-ui/styles.css";

const PARENT_ORIGIN = "http://localhost:3000"; // main app origin

export default function ChatPopup() {
  const [open, setOpen] = useState(false);

  // Notify the parent how big the iframe should be
  useEffect(() => {
    const payload = open
      ? { type: "chat:size", w: 420, h: 560 }   // opened panel size
      : { type: "chat:size", w: 56,  h: 56  };  // minimized icon size
    window.parent?.postMessage(payload, PARENT_ORIGIN);
  }, [open]);

  return (
    <div style={{ height: "100vh", margin: 0, background: "transparent" }}>
      <CopilotKit runtimeUrl="/api/copilotkit">
        <CopilotPopup open={open} onOpenChange={setOpen} title="Copilot" />
      </CopilotKit>
    </div>
  );
}






export default function Layout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body style={{ margin: 0, height: "100vh", background: "transparent" }}>
        {children}
      </body>
    </html>
  );
}





import { useEffect, useRef } from "react";

const CHILD_ORIGIN = "http://localhost:3001"; // Next sub-app origin

export default function ChatIframe() {
  const ref = useRef(null);

  useEffect(() => {
    const onMsg = (e) => {
      if (e.origin !== CHILD_ORIGIN) return;
      const { type, w, h } = e.data || {};
      if (type === "chat:size" && ref.current) {
        Object.assign(ref.current.style, {
          width:  `${w}px`,
          height: `${h}px`,
          borderRadius: w === 56 ? "50%" : "12px", // icon vs panel
          boxShadow: w === 56 ? "none" : "0 8px 24px rgba(0,0,0,.18)"
        });
      }
    };
    window.addEventListener("message", onMsg);
    return () => window.removeEventListener("message", onMsg);
  }, []);

  return (
    <iframe
      ref={ref}
      title="CopilotPopup"
      src={`${CHILD_ORIGIN}/embed/popup`}
      style={{
        position: "fixed",
        right: 16,
        bottom: 16,
        width: 56,   // start minimized
        height: 56,
        border: 0,
        background: "transparent",
        zIndex: 2147483647   // stay above everything
      }}
      allow="clipboard-read; clipboard-write"
      referrerPolicy="no-referrer-when-downgrade"
    />
  );
}





import ChatIframe from "./ChatIframe";
import "./styles/app.css";

export default function App() {
  return (
    <div className="app-shell">
      <header className="app-header">Main App</header>
      <main className="app-main">
        {/* your page content */}
        <ChatIframe />
      </main>
    </div>
  );
}






html, body, #root { height: 100%; margin: 0; }
.app-shell { height: 100%; display: grid; grid-template-rows: 56px 1fr; }
.app-header { display:flex; align-items:center; padding:0 16px; border-bottom:1px solid #eee; }
.app-main { position: relative; height: 100%; min-height: 0; }