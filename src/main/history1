import React, { useEffect, useRef, useState } from "react";
import ChatBot from "react-simple-chatbot";

export default function App() {
  const historyRef = useRef([]); // [{role, content}]

  function PythonStep(props) {
    const [reply, setReply] = useState("â€¦");
    const ranRef = useRef(false);

    useEffect(() => {
      if (ranRef.current) return;
      ranRef.current = true;

      const userText = props.previousStep?.message || "";
      historyRef.current.push({ role: "user", content: userText });

      (async () => {
        const res = await fetch("http://localhost:8000/copilot", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            input: userText,
            history: historyRef.current, // ðŸ‘ˆ send flat array
          }),
        });
        const data = await res.json();
        const text = data.answer || "No response";
        setReply(text);
        historyRef.current.push({ role: "assistant", content: text });
        props.triggerNextStep({ trigger: "user" });
      })();
    }, [props.previousStep?.message, props.triggerNextStep]);

    return <div>{reply}</div>;
  }

  const steps = [
    { id: "welcome", message: "Hi! Ask me something.", trigger: "user" },
    { id: "user", user: true, trigger: "python" },
    {
      id: "python",
      component: <PythonStep />,
      asMessage: true,
      waitAction: true,
    },
  ];

  return <ChatBot steps={steps} />;
}